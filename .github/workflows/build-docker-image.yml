name: Build and publish a Docker image

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/simple-api-nodejs

jobs:

  # analyze_dockerfile:
  #   permissions:
  #       contents: read
  #       security-events: write
  #   uses: 0GiS0/scan-docker-vulnerabilities/.github/workflows/checkov.yaml@main
  #   with:
  #       dockerfile_path: tour-of-heroes-angular/Dockerfile.gh-copilot

  # analyze_image:
  #   permissions:
  #       contents: read
  #       security-events: write
  #   uses: 0GiS0/scan-docker-vulnerabilities/.github/workflows/trivy.yaml@main
  #   with:
  #       image_name: tour-of-heroes-angular
  #       dockerfile_path: tour-of-heroes-angular/Dockerfile.gh-copilot
  #       context: tour-of-heroes-angular

  build-and-push-image:
    # needs: [analyze_dockerfile, analyze_image]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:

      - name: Checkout repository
        uses:
          actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PAT_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
